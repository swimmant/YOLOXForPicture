Metadata-Version: 2.1
Name: yolox
Version: 0.2.0
Summary: UNKNOWN
Home-page: https://github.com/Megvii-BaseDetection/YOLOX
Author: megvii basedet team
License: UNKNOWN
Project-URL: Documentation, https://yolox.readthedocs.io
Project-URL: Source, https://github.com/Megvii-BaseDetection/YOLOX
Project-URL: Tracker, https://github.com/Megvii-BaseDetection/YOLOX/issues
Description: 
        ## Introduction
        本工程在官方YOLOX原版基础上实现，但作了不少改动。如果需要替换代码块之前，需要先检查代码所涉及的变量是否一致。下面是原版工程的介绍。我就不班门弄斧了。
        YOLOX is an anchor-free version of YOLO, with a simpler design but better performance! It aims to bridge the gap between research and industrial communities.
        For more details, please refer to our [report on Arxiv](https://arxiv.org/abs/2107.08430).
        
        This repo is an implementation of PyTorch version YOLOX, there is also a [MegEngine implementation](https://github.com/MegEngine/YOLOX).
        
        
        ## Weights
        
        #### YOLO-X分为几个子系列，分别是 s m l x以及tiny等。如果需要下载权重，请到repo的原地址下载。
        Repo原地址:https://github.com/Megvii-BaseDetection/YOLOX
        
        <details>
        <summary>Legacy models</summary>
        
        |Model |size |mAP<sup>test<br>0.5:0.95 | Speed V100<br>(ms) | Params<br>(M) |FLOPs<br>(G)| weights |
        | ------        |:---: | :---:       |:---:     |:---:  | :---: | :----: |
        |[YOLOX-s](./exps/default/yolox_s.py)    |640  |39.6      |9.8     |9.0 | 26.8 | [onedrive](https://megvii-my.sharepoint.cn/:u:/g/personal/gezheng_megvii_com/EW62gmO2vnNNs5npxjzunVwB9p307qqygaCkXdTO88BLUg?e=NMTQYw)/[github](https://github.com/Megvii-BaseDetection/storage/releases/download/0.0.1/yolox_s.pth) |
        |[YOLOX-m](./exps/default/yolox_m.py)    |640  |46.4      |12.3     |25.3 |73.8| [onedrive](https://megvii-my.sharepoint.cn/:u:/g/personal/gezheng_megvii_com/ERMTP7VFqrVBrXKMU7Vl4TcBQs0SUeCT7kvc-JdIbej4tQ?e=1MDo9y)/[github](https://github.com/Megvii-BaseDetection/storage/releases/download/0.0.1/yolox_m.pth) |
        |[YOLOX-l](./exps/default/yolox_l.py)    |640  |50.0  |14.5 |54.2| 155.6 | [onedrive](https://megvii-my.sharepoint.cn/:u:/g/personal/gezheng_megvii_com/EWA8w_IEOzBKvuueBqfaZh0BeoG5sVzR-XYbOJO4YlOkRw?e=wHWOBE)/[github](https://github.com/Megvii-BaseDetection/storage/releases/download/0.0.1/yolox_l.pth) |
        |[YOLOX-x](./exps/default/yolox_x.py)   |640  |**51.2**      | 17.3 |99.1 |281.9 | [onedrive](https://megvii-my.sharepoint.cn/:u:/g/personal/gezheng_megvii_com/EdgVPHBziOVBtGAXHfeHI5kBza0q9yyueMGdT0wXZfI1rQ?e=tABO5u)/[github](https://github.com/Megvii-BaseDetection/storage/releases/download/0.0.1/yolox_x.pth) |
        |[YOLOX-Darknet53](./exps/default/yolov3.py)   |640  | 47.4      | 11.1 |63.7 | 185.3 | [onedrive](https://megvii-my.sharepoint.cn/:u:/g/personal/gezheng_megvii_com/EZ-MV1r_fMFPkPrNjvbJEMoBLOLAnXH-XKEB77w8LhXL6Q?e=mf6wOc)/[github](https://github.com/Megvii-BaseDetection/storage/releases/download/0.0.1/yolox_darknet53.pth) |
        
        
        ## Quick Start
        
        <details>
        <summary>Installation</summary>
        
        Step1. 安装相关库
        
        安装Anaconda
        安装Python==3.8
        如果有NVIDIA GPU且显存大于6GB,则可以配置额外的GPU环境来使用GPU推理。要做到这一点，需要安装Linux(Ubuntu 18.04）。
        
        ```shell
        cd YOLOX (切换回项目YOLOX目录下）
        python3 setup.py develop
        cd .. (切换回项目根目录）
        pip3 install -r requirement.txt
        ```
        
        </details>
        
        <details>
        Step2. 安装相关库
        
        Step1. 从上面的benchmark table下载预训练模型，或者从官方repo下载.
        如果有gpu，可以用l,x结尾的大模型，如果没有，建议使用 s m tiny之类的小模型
        
        下面的例子以yolo_s为例。
        
        对照片推理
        ```shell
        python tools/demo.py image -n yolox-s -c pretrained/yolox_s.pth --path assets/1.jpg --conf 0.25 --nms 0.45 --tsize 640 --save_result --device [cpu/gpu]
        ```
        对视频推理
        ```shell
        python tools/demo.py image -f exps/default/yolox_s.py -c /path/to/your/yolox_s.pth --path assets/dog.jpg --conf 0.25 --nms 0.45 --tsize 640 --save_result --device [cpu/gpu]
        ```
        从摄像头推理
        ```shell
        python demo.py webcam -n yolox-s -c pretrained/yolox_s.pth --conf 0.25 --nms 0.45 --tsize 640
        ```
        
        
        </details>
        
        <details>
        <summary>重新训练模型</summary>
        
        Step1. Prepare COCO dataset
        只要你是完整的下载了工程，这一步我已经做好了。另外，在dataset里，还有原始的数据集压缩包，如果搞坏了可以直接覆盖回去。
        
        Step2. Reproduce our results on COCO by specifying -n:
        
        ```shell
        python -m yolox.tools.train -n yolox-s -d 8 -b 64 --fp16 -o [--cache]
                                       yolox-m
                                       yolox-l
                                       yolox-x
        ```
        * -d: number of gpu devices
        * -b: total batch size, the recommended number for -b is num-gpu * 8
        * --fp16: mixed precision training
        * --cache: caching imgs into RAM to accelarate training, which need large system RAM. 
        
          
        When using -f, the above commands are equivalent to:
        ```shell
        python -m yolox.tools.train -f exps/default/yolox_s.py -d 8 -b 64 --fp16 -o [--cache]
                                       exps/default/yolox_m.py
                                       exps/default/yolox_l.py
                                       exps/default/yolox_x.py
        ```
          
        That's all folks.
        
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: OS Independent
Classifier: License :: OSI Approved :: Apache Software License
Requires-Python: >=3.6
Description-Content-Type: text/markdown
